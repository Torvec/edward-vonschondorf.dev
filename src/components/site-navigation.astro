---
import { pageLinks, socialLinks } from "@/global-consts";

const { currentPage } = Astro.props;

const isActive = (href: string) => {
  return (href === "/" && currentPage === "/") || (href !== "/" && currentPage.startsWith(href));
};
---

<nav
  class="fixed bottom-0 z-20 w-full border-t border-stone-700 bg-stone-800 lg:top-0 lg:flex lg:h-screen lg:w-12 lg:flex-col lg:border-r lg:pb-6">
  <div id="menu" class="hidden py-3 font-medium lg:flex lg:grow lg:flex-col lg:justify-between lg:py-0">
    <div>
      {
        pageLinks.map(({ name, href, Icon }) => (
          <a
            href={href}
            title={name}
            class={`group flex items-center justify-center gap-3 py-6 hover:bg-stone-700 lg:h-12 lg:py-0 ${
              isActive(href) ? "bg-stone-700 text-stone-300" : "text-stone-400"
            }`}>
            <Icon
              class="size-6 transition-all duration-300 ease-in-out group-hover:scale-120 group-hover:text-stone-300 lg:mx-auto"
              aria-label={name}
            />
            <span class="group-hover:text-stone-300 lg:hidden">{name}</span>
          </a>
        ))
      }
    </div>
    <div>
      {
        socialLinks.map(({ name, url, Icon }) => (
          <a
            href={url}
            target="_blank"
            rel="noopener noreferrer external"
            title={name}
            class="group flex items-center justify-center gap-3 py-6 text-stone-400 hover:bg-stone-700 lg:h-12 lg:py-0">
            <Icon
              class="size-6 text-stone-400 transition-all duration-300 ease-in-out group-hover:scale-120 group-hover:text-stone-300 lg:mx-auto"
              aria-label={name}
            />
            <span class="group-hover:text-stone-300 lg:hidden">{name}</span>
          </a>
        ))
      }
    </div>
  </div>
  <button id="menu-toggle" class="group z-20 mx-auto block cursor-pointer lg:hidden" aria-label="Toggle Menu">
    <span
      id="menu-open"
      class="block rounded-md border border-stone-700 p-1.5 text-2xl text-white transition-colors duration-150 ease-in-out hover:border-stone-500 hover:bg-stone-900">
      +
    </span>
    <span
      id="menu-close"
      class="hidden rounded-md border border-stone-900 p-1.5 text-2xl text-white transition-colors duration-150 ease-in-out hover:border-stone-500 hover:bg-stone-900">
      X
    </span>
  </button>
</nav>
<!-- Handles the drop down menu visibility below sm breakpoint -->
<script is:inline>
  /*
  This line is so the script doesn't stop working after a link in the menu (or any link) is clicked due to Astro's view transitions implementation. See: https://docs.astro.build/en/guides/view-transitions/#script-re-execution
  */
  document.addEventListener("astro:page-load", () => {
    const menuToggle = document.getElementById("menu-toggle");
    const menu = document.getElementById("menu");
    const menuOpen = document.getElementById("menu-open");
    const menuClose = document.getElementById("menu-close");

    // Toggle menu visibility
    menuToggle.addEventListener("click", (event) => {
      event.stopPropagation();
      menu.classList.toggle("hidden");
      menu.classList.toggle("block");
      menuOpen.classList.toggle("hidden");
      menuOpen.classList.toggle("block");
      menuClose.classList.toggle("hidden");
      menuClose.classList.toggle("block");
    });

    // Close menu when clicking outside
    document.addEventListener("click", (event) => {
      if (!menu.contains(event.target) && !menuToggle.contains(event.target)) {
        menu.classList.add("hidden");
        menu.classList.remove("block");
        menuOpen.classList.remove("hidden");
        menuOpen.classList.add("block");
        menuClose.classList.add("hidden");
        menuClose.classList.remove("block");
      }
    });
  });
</script>
