---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@/layouts/layout.astro";
import Close from "@/assets/close.svg";

/* getStaticPaths() is setting up all the possible dynamic routes based on 
all the projects in the projects collection and all of the images within each project */
export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.flatMap((project) =>
    project.data.images.map((_, index) => ({
      params: {
        project: project.id, // Creates a [project]/ directory dynamically
        screenshot: index.toString(), // Creates an [image] page dynamically
      },
    }))
  );
}

/* extracting the params from getStaticPaths so they can be used by getEntry 
to get the specifc project and specific image so the correct elements can be rendered */
const { project, screenshot } = Astro.params;
const imageIndex = Number(screenshot);

/* getEntry gets the images and title from the data object within a project object in the projects collection */
const { data } = await getEntry("projects", project)!;
const { images, title } = data;

const currentIndex = images[imageIndex];
---

<Layout title={title + " Screenshot Gallery | Edward Vonschondorf"} description={"Images"}>
  <article
    class="relative z-10 container mx-auto my-auto max-w-4xl divide-y divide-stone-700 overflow-clip border-y border-stone-700 backdrop-blur-xs sm:rounded-3xl sm:border-x">
    <div class="flex items-center justify-between bg-stone-900/40 px-6 py-3">
      <h1 class="text-xl font-bold text-stone-100">{title}</h1>
      <a
        href={`/projects/${project}`}
        aria-label={`Return to ${title} page`}
        title={`Return to ${title} page`}
        class="block text-stone-300 transition-colors duration-300 ease-in-out hover:text-orange-600">
        <Close />
      </a>
    </div>
    <div class="aspect-square place-content-center bg-black">
      <Image src={currentIndex} alt={`${title} Screenshot`} class="mx-auto" />
    </div>
    <div
      class="grid grid-cols-2 divide-x divide-y divide-stone-700 overflow-clip bg-black sm:divide-y-0 md:grid-cols-4">
      {
        Array.from({ length: 4 }, (_, index) => images[index] ?? "").map((img, idx) =>
          img ? (
            <a
              href={`/projects/${project}/gallery/${idx}`}
              class={`aspect-square bg-black p-3 transition-all duration-300 ease-in-out ${idx !== imageIndex ? "hover:p-0" : ""} ${idx === imageIndex ? "bg-stone-800" : ""}`}>
              <Image src={img} alt={`${title} Screenshot`} class="size-full object-contain" />
            </a>
          ) : (
            <div class="aspect-square bg-black p-3" />
          )
        )
      }
    </div>
  </article>
</Layout>
