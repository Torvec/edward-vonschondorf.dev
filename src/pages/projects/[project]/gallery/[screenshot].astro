---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@/layouts/layout.astro";
import Card from "@/components/card.astro";
import Close from "@/assets/close.svg";

/* getStaticPaths() is setting up all the possible dynamic routes based on 
all the projects in the projects collection and all of the images within each project */
export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.flatMap((project) =>
    project.data.images.map((_, index) => ({
      params: {
        project: project.id, // Creates a [project]/ directory dynamically
        screenshot: index.toString(), // Creates an [image] page dynamically
      },
    }))
  );
}

/* extracting the params from getStaticPaths so they can be used by getEntry 
to get the specifc project and specific image so the correct elements can be rendered */
const { project, screenshot } = Astro.params;
const imageIndex = Number(screenshot);

/* getEntry gets the images and title from the data object within a project object in the projects collection */
const { data } = await getEntry("projects", project)!;
const { images, title } = data;

const currentIndex = images[imageIndex];
---

<Layout title={title + " Screenshot Gallery | Edward Vonschondorf"} description={"Images"}>
  <article class="relative z-10 container mx-auto my-auto max-w-3xl px-1.5 lg:px-3 xl:px-0">
    <Card>
      <div class="mb-3 flex items-baseline justify-between">
        <h1 class="text-xl font-bold text-stone-100">{title}</h1>
        <a
          href={`/projects/${project}`}
          aria-label={`Return to ${title} page`}
          title={`Return to ${title} page`}
          class="block text-stone-300 transition-colors duration-300 ease-in-out hover:text-orange-600">
          <Close />
        </a>
      </div>
      <div class="aspect-square rounded-t-xl border-x border-t border-stone-700 bg-black py-6 md:py-12">
        <Image src={currentIndex} alt={`${title} Screenshot`} class="mx-auto" />
      </div>
      <div
        class="grid divide-x divide-stone-700 overflow-clip rounded-b-xl border border-stone-700 bg-black md:grid-cols-4">
        {
          images.map((_: any, index: number) => (
            <a
              href={`/projects/${project}/gallery/${index}`}
              class={`aspect-square bg-black py-3 transition-colors duration-300 ease-in-out ${index !== imageIndex ? "hover:bg-stone-700" : null} ${index === imageIndex ? "bg-stone-700" : ""}`}>
              <Image src={images[index]} alt={`${title} Screenshot`} class="size-full object-cover" />
            </a>
          ))
        }
      </div>
    </Card>
  </article>
</Layout>
